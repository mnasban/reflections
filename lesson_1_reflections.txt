How did viewing a diff between two versions of a file help you see the bug that was introduced?
to see the new lines added to the code, since the old code should be without bugs.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
you check previous code and compare it to the new for testing purposes, or you can rollback in case the new features are canceled.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
manually committing allows for flexibility in choosing logical points, while automatically saving will save each change regardless of its logically importance.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
saving multiple files in one commit is useful if the files are interrelated  with each other but google docs might be used in case there are files that are separated logically and not related to other files.

How can you use the commands git log and git diff to view the history of files?
log can provide a list of all the commits that happened to all files in a folder and then i can compare between each commit to a file by using diff to see the changes made.

How might using version control make you more confident to make changes that could break something?
very confident, because you can always revert back to previous version of your code.

Now that you have your workspace set up, what do you want to try using Git for?
for coding.
